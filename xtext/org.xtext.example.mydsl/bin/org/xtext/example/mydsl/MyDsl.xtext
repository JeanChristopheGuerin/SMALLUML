// automatically generated by Xtext
grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "platform:/resource/SMALLUML/model/smalluml.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Package returns Package:
	{Package}
	'Package'
	'{'
		('listElements' '{' listElements+=Element ( "," listElements+=Element)* '}' )?
	'}';

Element returns Element:
	Element_Impl | Class | NamedElement_Impl | Operation | Attribute | Type_Impl | BooleanV | StringV | RealV | IntegerV | Enumeration | Cardinalite;




Type returns Type:
	Type_Impl | Attribute | BooleanV | StringV | RealV | IntegerV;

Element_Impl returns Element:
	{Element}
	'Element'
	;

Class returns Class:
	'Class'
	'{'
		'Name' Name=String0
		('Operations' '{' Operations+=Operation ( "," Operations+=Operation)* '}' )?
		('Attributes' '{' Attributes+=Attribute ( "," Attributes+=Attribute)* '}' )?
		('SuperClass' '{' SuperClass+=Class ( "," SuperClass+=Class)* '}' )?
	'}';

NamedElement_Impl returns NamedElement:
	'NamedElement'
	'{'
		'Name' Name=String0
	'}';

Operation returns Operation:
	'Operation'
	'{'
		'Name' Name=String0
	'}';

Attribute returns Attribute:
	'Attribute'
	'{'
		'Name' Name=String0
		'Type' Type=Type
	'}';

Type_Impl returns Type:
	'Type'
	'{'
		'Name' Name=String0
	'}';

BooleanV returns BooleanV:
	'BooleanV'
	'{'
		'Name' Name=String0
		'Value' Value=Boolean
	'}';

StringV returns StringV:
	'StringV'
	'{'
		'Name' Name=String0
		'Value' Value=String0
	'}';

RealV returns RealV:
	'RealV'
	'{'
		'Name' Name=String0
		'Value' Value=Real
	'}';

IntegerV returns IntegerV:
	'IntegerV'
	'{'
		'Name' Name=String0
		'Value' Value=Integer
	'}';

Enumeration returns Enumeration:
	'Enumeration'
	'{'
		'Name' Name=String0
	'}';

Cardinalite returns Cardinalite:
	'Cardinalite'
	'{'
		'Name' Name=String0
		'lowerBound' lowerBound=Integer
		'upperBound' upperBound=Integer
	'}';

String0 returns String:
	'String' /* TODO: implement this rule and an appropriate IValueConverter */;

Boolean returns Boolean:
	'Boolean' /* TODO: implement this rule and an appropriate IValueConverter */;

Real returns Real:
	'Real' /* TODO: implement this rule and an appropriate IValueConverter */;

Integer returns Integer:
	'Integer' /* TODO: implement this rule and an appropriate IValueConverter */;
